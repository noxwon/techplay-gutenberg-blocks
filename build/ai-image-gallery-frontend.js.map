{"version":3,"file":"ai-image-gallery-frontend.js","mappings":"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","sources":["webpack://techplay-gutenberg-blocks/./src/blocks/ai-image-gallery/ai-image-gallery-frontend.js"],"sourcesContent":["/**\n * AI 이미지 갤러리 프론트엔드 스크립트\n * Masonry 레이아웃, 라이트박스 및 이미지 정보 표시 기능 구현\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // 갤러리 요소 찾기\n    const galleries = document.querySelectorAll('.wp-block-techplay-gutenberg-blocks-ai-image-gallery');\n    \n    // 각 갤러리 처리\n    if (galleries.length > 0) {\n        galleries.forEach(gallery => {\n            // Masonry 체크\n            if (gallery.classList.contains('has-masonry-layout')) {\n                // imagesLoaded 및 Masonry 초기화 (전역 객체 사용)\n                if (typeof window.imagesLoaded !== 'undefined' && typeof window.Masonry !== 'undefined') {\n                    const imgLoad = window.imagesLoaded(gallery);\n                    \n                    imgLoad.on('done', function() {\n                        new window.Masonry(gallery, {\n                            itemSelector: '.gallery-item',\n                            percentPosition: true,\n                            gutter: parseInt(window.getComputedStyle(gallery).getPropertyValue('--gap')) || 0\n                        });\n                    });\n                }\n            }\n            \n            // 라이트박스와 호버 액션 초기화\n            if (gallery.classList.contains('has-lightbox')) {\n                initializeLightbox(gallery);\n            }\n            \n            initializeHoverActions(gallery);\n        });\n    }\n    \n    // 모달 닫기 핸들러 추가\n    const closeButtons = document.querySelectorAll('.ai-gallery-modal .close');\n    closeButtons.forEach(button => {\n        button.addEventListener('click', function() {\n            const modal = this.closest('.ai-gallery-modal');\n            if (modal) {\n                modal.style.display = 'none';\n            }\n        });\n    });\n});\n\n// Helper Functions\nfunction parseSDParameters(paramsString, promptString) {\n    const result = { positive: promptString || '', negative: '', params: {} };\n    if (!paramsString || typeof paramsString !== 'string') return result;\n\n    let lines = paramsString.split('\\n');\n    let negPromptIndex = -1;\n    let paramsIndex = -1;\n\n    // Find indices of Negative prompt and Parameters\n    for (let i = 0; i < lines.length; i++) {\n        if (lines[i].startsWith('Negative prompt:')) {\n            negPromptIndex = i;\n        } else if (lines[i].startsWith('Steps:')) {\n            paramsIndex = i;\n            break;\n        }\n    }\n\n    // Extract Positive Prompt\n    if (negPromptIndex !== -1) {\n        result.positive = lines.slice(0, negPromptIndex).join('\\n').trim();\n    } else if (paramsIndex !== -1) {\n        result.positive = lines.slice(0, paramsIndex).join('\\n').trim();\n    } else if (!result.positive) {\n        result.positive = paramsString.trim(); \n    }\n\n    // Extract Negative Prompt\n    if (negPromptIndex !== -1) {\n        let endIndex = (paramsIndex !== -1 && paramsIndex > negPromptIndex) ? paramsIndex : lines.length;\n        result.negative = lines.slice(negPromptIndex, endIndex).join('\\n').substring('Negative prompt:'.length).trim();\n    }\n\n    // Extract and Parse Parameters\n    if (paramsIndex !== -1) {\n        const paramsLines = lines.slice(paramsIndex).join(', ');\n        const regex = /(\\w+(?:\\s+\\w+)*?):\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|[^,]+(?:,\\s*(?![A-Za-z\\s]+:))?)/g;\n        let match;\n        while ((match = regex.exec(paramsLines)) !== null) {\n            const key = match[1].trim();\n            let value = match[2].trim();\n            if (value.endsWith(',')) value = value.slice(0, -1).trim();\n            if (value.startsWith('\"') && value.endsWith('\"')) value = value.slice(1, -1);\n            if (key) result.params[key] = value;\n        }\n    }\n\n    return result;\n}\n\nfunction displayInfoModal(parameters, prompt) {\n    let $modal = jQuery('#ai-gallery-info-modal'); \n\n    // Create modal if it doesn't exist\n    if ($modal.length === 0) {\n        jQuery('body').append(`\n            <div id=\"ai-gallery-info-modal\" class=\"ai-image-modal\" style=\"display: none;\">\n                <div class=\"modal-content\">\n                    <button class=\"close-button\" title=\"Close\">&times;</button>\n                    <div class=\"image-meta\"></div>\n                </div>\n            </div>\n        `);\n        $modal = jQuery('#ai-gallery-info-modal');\n\n        // Attach close handlers\n        $modal.on('click', function(e) {\n            if (jQuery(e.target).is($modal) || jQuery(e.target).closest('.close-button').length) {\n                $modal.fadeOut(300); \n            }\n        });\n    }\n\n    const $metaContainer = $modal.find('.image-meta');\n    let html = '<h3>Image Generation Details</h3>';\n\n    const parsedData = parseSDParameters(parameters, prompt);\n\n    // Display Positive Prompt\n    if (parsedData.positive) {\n        html += `<div class=\"meta-section\"><h4>Positive Prompt</h4><div class=\"prompt-box positive\"><p>${escapeHtml(parsedData.positive)}</p></div></div>`;\n    } \n    // Display Negative Prompt\n    if (parsedData.negative) {\n        html += `<div class=\"meta-section\"><h4>Negative Prompt</h4><div class=\"prompt-box negative\"><p>${escapeHtml(parsedData.negative)}</p></div></div>`;\n    }\n    // Display Parameters\n    const otherParamsKeys = Object.keys(parsedData.params);\n    if (otherParamsKeys.length > 0) {\n        html += '<div class=\"meta-section generation-details-section\"><h4>Parameters</h4>';\n        otherParamsKeys.forEach(key => {\n             html += `<p><strong>${escapeHtml(key)}:</strong> <span>${escapeHtml(parsedData.params[key])}</span></p>`;\n        });\n        html += '</div>';\n    } else if (!parsedData.positive && !parsedData.negative) {\n         html += '<div class=\"meta-section generation-details-section\"><h4>Parameters</h4><p>No specific parameters found.</p></div>';\n    }\n    \n    // Display Civitai Resources\n    if (parsedData.params['Civitai resources'] && typeof parsedData.params['Civitai resources'] === 'string') {\n        try {\n            const resources = JSON.parse(parsedData.params['Civitai resources'].replace(/&quot;/g, '\"'));\n            if (Array.isArray(resources)) {\n                 html += `<div class=\"meta-section civitai-resources-section\"><h4>Civitai Resources</h4>`;\n                resources.forEach(resource => {\n                    html += `<p><strong>Type:</strong> ${escapeHtml(resource.type || 'N/A')}, `;\n                    if(resource.modelName && resource.modelVersionName) {\n                         html += `<strong>Name:</strong> ${escapeHtml(resource.modelName)} (${escapeHtml(resource.modelVersionName)}), `;\n                    } else if (resource.modelName) {\n                        html += `<strong>Name:</strong> ${escapeHtml(resource.modelName)}, `;\n                    }\n                    if(resource.weight !== undefined) {\n                        html += `<strong>Weight:</strong> ${escapeHtml(resource.weight)}`;\n                    }\n                     html += `</p>`;\n                });\n                 html += `</div>`;\n            }\n        } catch (e) {\n             html += `<div class=\"meta-section civitai-resources-section\"><h4>Civitai Resources (Raw)</h4><pre>${escapeHtml(parsedData.params['Civitai resources'])}</pre></div>`;\n        }\n    }\n\n    $metaContainer.html(html);\n    $modal.css('display', 'flex').hide().fadeIn(300);\n}\n\nfunction escapeHtml(unsafe) {\n    if (typeof unsafe !== 'string') return unsafe; \n    return unsafe\n         .replace(/&/g, \"&amp;\")\n         .replace(/</g, \"&lt;\")\n         .replace(/>/g, \"&gt;\")\n         .replace(/\"/g, \"&quot;\")\n         .replace(/'/g, \"&#039;\");\n}\n\nfunction initializeLightbox(galleryElement) {\n    if (!galleryElement.classList.contains('has-lightbox')) return;\n\n    let lightboxModal = document.getElementById('ai-gallery-lightbox-modal');\n    if (!lightboxModal) {\n        lightboxModal = document.createElement('div');\n        lightboxModal.id = 'ai-gallery-lightbox-modal';\n        lightboxModal.innerHTML = `\n            <div class=\"modal-content\">\n                <figure>\n                    <img src=\"\" alt=\"\" id=\"lightbox-image\">\n                </figure>\n                <button class=\"close-button\" title=\"Close lightbox\">\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" width=\"18\" height=\"18\">\n                        <path d=\"M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z\" />\n                     </svg>\n                </button>\n            </div>\n        `;\n        lightboxModal.querySelector('.close-button').addEventListener('mousedown', (e) => { \n            e.stopPropagation(); \n            lightboxModal.style.display = 'none';\n        });\n        lightboxModal.addEventListener('mousedown', (e) => { \n            if (e.target === lightboxModal) { \n                lightboxModal.style.display = 'none';\n            }\n        });\n        document.body.appendChild(lightboxModal);\n    }\n\n    const lightboxImage = lightboxModal.querySelector('#lightbox-image');\n\n    galleryElement.querySelectorAll('.gallery-item img').forEach(img => {\n        img.style.cursor = 'pointer';\n        img.addEventListener('click', (e) => {\n            if (e.target.closest('button')) return;\n            \n            const largeSrc = e.target.dataset.largeSrc || e.target.src;\n            const altText = e.target.alt || '';\n            lightboxImage.src = largeSrc;\n            lightboxImage.alt = altText;\n            lightboxModal.style.display = 'flex';\n        });\n    });\n}\n\nfunction initializeHoverActions(galleryElement) {\n     const items = galleryElement.querySelectorAll('.gallery-item');\n\n    items.forEach(item => {\n        const infoButton = item.querySelector('.image-info-icon');\n        const copyButton = item.querySelector('.copy-url-button');\n        const downloadButton = item.querySelector('.download-image-button');\n        const img = item.querySelector('img');\n        \n        if (infoButton) {\n            infoButton.addEventListener('click', (e) => {\n                 e.stopPropagation(); \n                 if (typeof displayInfoModal === 'function') {\n                    displayInfoModal(img.dataset.parameters, img.dataset.prompt);\n                 }\n            });\n        }\n        \n        if (copyButton && img) {\n            copyButton.addEventListener('click', (e) => {\n                 e.stopPropagation();\n                const imageUrl = img.dataset.largeSrc || img.src;\n                navigator.clipboard.writeText(imageUrl).then(() => {\n                    copyButton.classList.add('copied');\n                    setTimeout(() => copyButton.classList.remove('copied'), 1500);\n                }).catch(err => {\n                    // URL 복사 실패 시 조용히 실패\n                });\n            });\n        }\n\n        if (downloadButton && img) {\n            downloadButton.addEventListener('click', (e) => {\n                 e.stopPropagation();\n                const imageUrl = img.dataset.largeSrc || img.src;\n                const link = document.createElement('a');\n                link.href = imageUrl;\n                const filename = imageUrl.substring(imageUrl.lastIndexOf('/') + 1).split('?')[0] || 'download.jpg';\n                link.download = filename;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            });\n        }\n    });\n}"],"names":["escapeHtml","unsafe","replace","document","addEventListener","galleries","querySelectorAll","length","forEach","gallery","classList","contains","window","imagesLoaded","Masonry","on","itemSelector","percentPosition","gutter","parseInt","getComputedStyle","getPropertyValue","galleryElement","lightboxModal","getElementById","createElement","id","innerHTML","querySelector","e","stopPropagation","style","display","target","body","appendChild","lightboxImage","img","cursor","closest","largeSrc","dataset","src","altText","alt","initializeLightbox","item","infoButton","copyButton","downloadButton","parameters","prompt","$modal","jQuery","append","is","fadeOut","$metaContainer","find","html","parsedData","paramsString","promptString","result","positive","negative","params","lines","split","negPromptIndex","paramsIndex","i","startsWith","slice","join","trim","endIndex","substring","match","paramsLines","regex","exec","key","value","endsWith","parseSDParameters","concat","otherParamsKeys","Object","keys","resources","JSON","parse","Array","isArray","resource","type","modelName","modelVersionName","undefined","weight","css","hide","fadeIn","displayInfoModal","imageUrl","navigator","clipboard","writeText","then","add","setTimeout","remove","err","link","href","filename","lastIndexOf","download","click","removeChild","button","modal","this"],"sourceRoot":""}