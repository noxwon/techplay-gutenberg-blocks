{"version":3,"file":"ai-image-gallery-frontend.js","mappings":"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","sources":["webpack://techplay-gutenberg-blocks/webpack/bootstrap","webpack://techplay-gutenberg-blocks/webpack/runtime/compat get default export","webpack://techplay-gutenberg-blocks/webpack/runtime/define property getters","webpack://techplay-gutenberg-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://techplay-gutenberg-blocks/external var \"jQuery\"","webpack://techplay-gutenberg-blocks/./src/blocks/ai-image-gallery/ai-image-gallery-frontend.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","import $ from 'jquery';\n\n// Initialize Masonry and Lightbox\n$(document).ready(function() {\n    const galleries = $('.wp-block-techplay-gutenberg-blocks-ai-image-gallery');\n\n    galleries.each(function() {\n        const $gallery = $(this);\n        const isMasonry = $gallery.hasClass('has-masonry');\n        const hasLightbox = $gallery.hasClass('has-lightbox');\n\n        // Initialize Masonry if enabled\n        if (isMasonry && typeof Masonry !== 'undefined') {\n            const masonryInstance = new Masonry(this, {\n                itemSelector: '.gallery-item',\n                columnWidth: '.gallery-item', \n                percentPosition: true,\n                gutter: parseInt($gallery.css('gap')) || 16\n            });\n\n            // Ensure images are loaded before layout\n            imagesLoaded(this).on('progress', function() {\n                masonryInstance.layout();\n            });\n        }\n\n        // Initialize Lightbox if enabled\n        if (hasLightbox) {\n            initLightbox($gallery);\n        }\n    });\n\n    // Create a single lightbox modal element for the entire page if it doesn't exist\n    if ($('#ai-gallery-lightbox-modal').length === 0) {\n        $('body').append(`\n            <div id=\"ai-gallery-lightbox-modal\" class=\"ai-gallery-lightbox-modal\" style=\"display: none;\">\n                <div class=\"modal-content\">\n                    <figure>\n                        <span class=\"close-button\">&times;</span>\n                        <img src=\"\" alt=\"\">\n                    </figure>\n                </div>\n            </div>\n        `);\n\n        // Close modal functionality\n        const $modal = $('#ai-gallery-lightbox-modal');\n        $modal.on('click', function(e) {\n            // Close if clicking on background or close button\n            if ($(e.target).is($modal) || $(e.target).is('.close-button')) {\n                $modal.fadeOut();\n            }\n        });\n    }\n\n    // Create a single info modal element if it doesn't exist\n    if ($('#ai-gallery-info-modal').length === 0) {\n        $('body').append(`\n            <div id=\"ai-gallery-info-modal\" class=\"ai-image-modal\" style=\"display: none;\">\n                <div class=\"modal-content\">\n                    <span class=\"close-button\">&times;</span>\n                    <div class=\"image-meta\">\n                        <!-- Content will be populated by JS -->\n                    </div>\n                </div>\n            </div>\n        `);\n        // Close info modal functionality\n        const $infoModal = $('#ai-gallery-info-modal');\n        $infoModal.on('click', function(e) {\n            if ($(e.target).is($infoModal) || $(e.target).is('.close-button')) {\n                $infoModal.fadeOut();\n            }\n        });\n    }\n});\n\nfunction initLightbox($gallery) {\n    // Image click handler for lightbox\n    $gallery.on('click', '.gallery-item > figure > img', function(e) { \n        e.preventDefault();\n        e.stopPropagation();\n\n        const $img = $(this);\n        const imageUrl = $img.attr('src');\n        const altText = $img.attr('alt') || 'Gallery image';\n\n        const $modal = $('#ai-gallery-lightbox-modal');\n        const $modalImg = $modal.find('img');\n\n        // Reset image source and hide modal initially\n        $modalImg.attr('src', '').attr('alt', '');\n        $modal.hide(); // Hide completely initially\n\n        // Preload image\n        const tempImg = new Image();\n        tempImg.onload = function() {\n            // Set modal image source and alt *after* loaded\n            $modalImg.attr('src', imageUrl).attr('alt', altText);\n            // Show the lightbox modal *after* image is loaded\n            $modal.fadeIn(); \n        };\n        tempImg.onerror = function() {\n            // Handle image loading error (optional)\n            console.error(\"Error loading image for lightbox:\", imageUrl);\n            // Optionally show an error message or close the modal\n            $modal.hide(); // Or $modal.fadeOut();\n        };\n        tempImg.src = imageUrl; // Start loading\n    });\n\n    // Info icon click handler\n    $gallery.on('click', '.image-info-icon', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $icon = $(this);\n        const $img = $icon.closest('.gallery-item').find('img');\n        // Try reading the attribute directly\n        const parameters = $img.attr('data-parameters') || ''; \n        \n        console.log(\"Info icon clicked.\");\n        console.log(\"Image Element:\", $img[0]); // Log the image element itself\n        console.log(\"Attempting to read data-parameters attribute:\", parameters); // Log raw attribute value\n\n        if (parameters && parameters.trim() !== '') {\n            displayInfoModal(parameters);\n        } else {\n            console.log(\"No parameters found or attribute is empty.\");\n            // Optionally display a message in the modal if parameters are empty\n            displayInfoModal(''); // Call with empty string to show default message\n        }\n    });\n}\n\n// Function to parse SD parameters (revised v2)\nfunction parseSDParameters(paramsString) {\n    console.log(\"Parsing parameters string (raw):\", paramsString);\n    const result = { positive: '', negative: '', params: {} };\n    if (!paramsString || typeof paramsString !== 'string') return result;\n\n    const lines = paramsString.split('\\n');\n    let positiveLines = [];\n    let paramLinesStartIndex = -1;\n    let negativePromptLineIndex = -1;\n\n    // First pass: Identify parameter start and negative prompt line\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i].trim();\n        if (paramLinesStartIndex === -1 && line.match(/^\\s*\\w+\\s*:.+/)) {\n            paramLinesStartIndex = i;\n        }\n        if (line.startsWith('Negative prompt:')) {\n            negativePromptLineIndex = i;\n        }\n    }\n\n    // Determine positive prompt lines\n    let positiveEndIndex = lines.length; // Default to end if no params/negative found\n    if (negativePromptLineIndex !== -1) {\n        positiveEndIndex = negativePromptLineIndex;\n    } else if (paramLinesStartIndex !== -1) {\n        positiveEndIndex = paramLinesStartIndex;\n    }\n    positiveLines = lines.slice(0, positiveEndIndex);\n    result.positive = positiveLines.join('\\n').trim();\n\n    // Extract negative prompt if found\n    if (negativePromptLineIndex !== -1) {\n        result.negative = lines[negativePromptLineIndex].substring('Negative prompt:'.length).trim();\n        // Adjust param start if negative prompt came before params\n        if (paramLinesStartIndex === -1 || paramLinesStartIndex < negativePromptLineIndex) {\n             paramLinesStartIndex = negativePromptLineIndex + 1;\n        }\n    } else {\n        result.negative = '';\n    }\n\n    // Process key-value parameters if found\n    if (paramLinesStartIndex !== -1 && paramLinesStartIndex < lines.length) {\n        const paramString = lines.slice(paramLinesStartIndex).join(' ').trim(); // Join remaining lines\n        console.log(\"Parameter string part for parsing:\", paramString);\n\n        // Split by comma, looking ahead for \"Key:\" pattern more carefully\n        // This regex is still imperfect for complex values with commas, but better\n        const paramParts = paramString.split(/,(?=\\s*(?:\\w+\\s*):\\s*)/);\n        console.log(\"Split param parts:\", paramParts);\n\n        paramParts.forEach(part => {\n            const parts = part.trim().split(':');\n            if (parts.length >= 2) {\n                const key = parts[0].trim();\n                let value = parts.slice(1).join(':').trim(); // Join back potential colons\n                \n                // Remove trailing comma if present (from split edge case)\n                if (value.endsWith(',')) {\n                    value = value.substring(0, value.length - 1).trim();\n                }\n                \n                if (key) {\n                    result.params[key] = value;\n                }\n            }\n        });\n    }\n\n    console.log(\"Parsed data (final v2):\", result);\n    return result;\n}\n\n// Function to display info modal\nfunction displayInfoModal(parameters) {\n    const $modal = $('#ai-gallery-info-modal');\n    const $metaContainer = $modal.find('.image-meta');\n    let html = '<h3>Image Generation Details</h3>';\n\n    console.log(\"[displayInfoModal] Function called. Modal element found:\", $modal.length > 0);\n\n    // Handle empty parameters case\n    if (!parameters || parameters.trim() === '') {\n        html += '<p>No detailed parameter information available for this image.</p>';\n        console.log(\"[displayInfoModal] Displaying 'no info' message.\");\n        $metaContainer.html(html);\n        console.log(\"[displayInfoModal] HTML set for 'no info'. Attempting direct display change...\");\n        $modal.css('display', 'flex'); // Use the display property used for centering\n        console.log(\"[displayInfoModal] display style set to 'flex'.\");\n        return; // Exit early\n    }\n\n    // Proceed with parsing if parameters exist\n    console.log(\"[displayInfoModal] Parameters found, proceeding with parsing...\");\n    const parsedData = parseSDParameters(parameters);\n    console.log(\"[displayInfoModal] Parsing complete. Parsed data:\", parsedData);\n\n    // Positive Prompt\n    if (parsedData.positive) {\n        html += `\n            <div class=\"meta-section\">\n                <h4>Positive Prompt</h4>\n                <div class=\"prompt-box positive\">\n                    <p>${parsedData.positive.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")}</p>\n                </div>\n            </div>\n        `;\n    }\n\n    // Negative Prompt\n    if (parsedData.negative) {\n        html += `\n            <div class=\"meta-section\">\n                <h4>Negative Prompt</h4>\n                <div class=\"prompt-box negative\">\n                     <p>${parsedData.negative.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")}</p>\n                </div>\n            </div>\n        `;\n    }\n\n    // Other Parameters\n    const otherParamsKeys = Object.keys(parsedData.params);\n    if (otherParamsKeys.length > 0) {\n        html += '<div class=\"meta-section\"><h4>Parameters</h4>';\n        otherParamsKeys.forEach(key => {\n            const value = parsedData.params[key];\n            html += `<p><strong>${key.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")}:</strong> ${value.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")}</p>`;\n        });\n        html += '</div>';\n    }\n\n    if (!parsedData.positive && !parsedData.negative && otherParamsKeys.length === 0) {\n        // This condition might be redundant now due to the early exit for empty parameters\n        html += '<p>No detailed parameter information available.</p>';\n    }\n    console.log(\"[displayInfoModal] HTML generation complete.\");\n\n    $metaContainer.html(html);\n    console.log(\"[displayInfoModal] HTML set for parameters. Attempting direct display change with !important...\");\n    // $modal.css('display', 'flex'); // Replace with direct style manipulation\n    $modal.attr('style', 'display: flex !important;'); // Force display with !important\n    console.log(\"[displayInfoModal] display style forcibly set to 'flex !important'.\");\n} "],"names":["$","document","ready","galleries","each","$gallery","isMasonry","hasClass","hasLightbox","Masonry","masonryInstance","itemSelector","columnWidth","percentPosition","gutter","parseInt","css","imagesLoaded","on","layout","initLightbox","length","append","$modal","e","target","is","fadeOut","$infoModal","preventDefault","stopPropagation","$img","imageUrl","attr","altText","$modalImg","find","hide","tempImg","Image","onload","fadeIn","onerror","console","error","src","$icon","closest","parameters","log","trim","displayInfoModal","parseSDParameters","paramsString","result","positive","negative","params","lines","split","positiveLines","paramLinesStartIndex","negativePromptLineIndex","i","line","match","startsWith","positiveEndIndex","slice","join","substring","paramString","paramParts","forEach","part","parts","key","value","endsWith","$metaContainer","html","parsedData","concat","replace","otherParamsKeys","Object","keys"],"sourceRoot":""}